reticulate::source_python('G:/My Drive/Python/test.py')
reticulate::source_python('G:/My Drive/Python/test.py')
reticulate::repl_python()
print("3")
reticulate::repl_python()
print(si)
p=23000
n=3
r=7.5
si = p*n*r/100
print(si)
si=n*r
si
print(si)
si = p*n*r/100
print(si)
p=23000
n=3
r=7.5
si = p*n*r/100
print(si)
n=30
si = p*n*r/100
print(si)
a<-10
a
a+n
7->12
12->a
a*b
a*c
a*n
help(mean)
? mean
? mean
data()
pressure
help(pressure)
pressure[,1]
pressure[,2]
titanic
Titanic
CO2
penguins
data()
pressure
CO2
penguins
class(CO2)
class(pressure)
class(CO2)
class(pressure)
class(pressure)
class(pressure)
class(pressure)
CO2
class(CO2)
Nile
class(Nile)
mtcars
class(mtcars)
class(mtcars)
class(mtcars)
mtcars
mtcars
class(mtcars)
q()
data("mtcars")
force(mtcars)
mtcars
data("mtcars")
force(mtcars)
View(mtcars)
mtcars[,1]
mtcars[,1]>10
mtcars[,1]>20
mtcars[mtcars[,1]>20]
mtcars[,1]>20
mtcars[,1]>20
install.packages(c("boot", "Matrix"))
#vector
p <- c()
p*n*r
print(p*n*r)
print(si)
#vector
p <- c(10,20,30)
n <- c(1,2,3)
r <- c(1,2,3)
si<-p*n*r/100
print(si)
si<-p*n*r
source("G:/My Drive/R/Class/two.R", echo = TRUE)
print(si)
####################
a <- "Maths"
class(a)
class(b)
b <- 38
class(b)
c <- as.integer(b)
class(c)
d <- TRUE
class(d)
e <- T
class(e)
setwd("G:/My Drive/R")
getwd()
p[,1]
p[1]
p <- c(1000,220,32)
class(p)
class(e)
class(p)
p <- c(1000,220,32)
class(p)
p <- c(1000,220,32)
###################
p <- c(1000,220,32)
class(p)
subjects <- c("maths","science")
class(subjects)
###################
p <- c(1000,220,32)
class(p)
subjects <- c("maths","science")
class(subjects)
setwd("G:/My Drive/R/Class")
r <- c(1000,'app',32)
class(r)
r
rr <- c(1000,T,32)
rr
ee <- c(1000,T,32)
ee <- c(1000,F,32)
ee
class(rr)
rr
ee <- c(1000,F,32)
ee
CO2
CO2$conc
class(CO2$conc)
class(CO2)
install.packages("shiny")
install.packages("learnr")
source("G:/My Drive/R/Class/one.R", echo = TRUE)
###################################
###################################
###################################
###################################
###################################
###################################
g <- list(1,23,34,5,67)
class(g)
f <- list(a=34,b=2.45,c="thy",d=c(1,24,5),e=FALSE)
f <- list(a=34,b=2.45,c="thy",d=c(1,24,5),e=FALSE)
length(f)
count(f)
length(f)
length(f)
length(f)
f$a
names(y)
names(f)
class(names(f))
names(f)
gc()
f[3]
class(s)
s <- c('f','m','m','m')
class(s)
class(s)
f_s <- factor(s)
class(f_s)
f_s
s
f_s
d <- NA
d <- NA
d <- NA
d
g <- c(34,NA,43)
is.na(g)
sum(is.na(g))
i=0/0
i
is.nan(i)
is.na(i)
i=56/0
i #NotaNumber (NaN)
is.nan(i)
is.na(i)
class(i)
is.finite(i)
i=0/0
i #NotaNumber (NaN)
is.nan(i)
is.na(i)
j=56/0
j #NotaNumber (NaN)
is.nan(j)
is.finite(j)
is.infinite(j)
i=0/0
i # Not a Number (NaN)
is.nan(i)
is.na(i)
################################
# Matrix
m=matrix(18,3,2)
m
class(m)
m
a=c(1,2,3,4,5,6)
n=matrix(c,2,3)
n=matrix(a,2,3)
a=c(1,2,3,4,5,6)
n=matrix(a,2,3)
n
o=matrix(a,2,3, byrow=T)
o
p=matrix(a,3,3)
p
p=matrix(a,3,3)
p
a <- c(1,2,3,4)
b <- c(10,20,30,40)
rb <- rbind(a,b)
rb
cb <- cbind(a,b)
cb
cc_rb <- rbind(a,cc)
cc <- c(10,20,30)
cc_rb <- rbind(a,cc)
cc_rb
########################################
# Binding
a <- c(1,2,3,4)
b <- c(10,20,30,40)
rb <- rbind(a,b)
rb
cb <- cbind(a,b)
cb
cc <- c(10,20,30)
cc_rb <- rbind(a,cc)
cc_rb
########################################
# Binding
a <- c(1,2,3,4)
b <- c(10,20,30,40)
rb <- rbind(a,b)
rb
cb <- cbind(a,b)
cb
cc <- c(10,20,30)
cc_rb <- rbind(a,cc)
cc_rb
dd_rb <- rbind(cc,a)
dd_rb
#################################
# Array
########################################
# Array
a <- array(data=c(1,2,3,4,5,6,7,8),dim=c(2,2,3))
c
a
########################################
# Array
a <- array(data=c(1,2,3,4,5,6,7,8),dim=c(2,2,2))
a
#######################################
df <- data.frame(s=c(2,4,6,8,10),d=c(10,20,30,40,50))
df
df$s
#######################################
df <- data.frame(a=c(2,4,6,8,10),b=c(10,20,30,40,50))
df
df$a
colnames(df)
names(df))
names(df)
df$a
colnames(df)
names(df)
housing <- read.csv("Datasets/Housing.csv")
housing[,1]
housing
housing <- read.csv("Datasets/Housing.csv")
housing
housing <- read.csv("Datasets/Housing.csv")
housing
View(housing)
str(housing)
str(housing) # gives internal structure of the object
housing <- read.csv("Datasets/Housing.csv", stringsAsFactors = T)
str(housing) # gives internal structure of the object
bolly1 <- read.csv("Datasets/Bollywood_2015")
bolly1 <- read.csv("Datasets/Bollywood_2015.csv")
bolly2 <- read.csv("Datasets/Bollywood_2015_2.csv", header = F)
colnames(bolly2) <- c("Movie","Collection","Budget","Verdict")
bolly1
str(bolly1)
str(bolly2)
colnames(bolly2) <- c("Movie","Collection","Budget","Verdict") # Manually assigned headers
str(bolly1)
str(bolly2)
diamonds <- read.csv2("/Datasets/Diamonds.csv")
diamonds <- read.csv2("G:/My Drive/R/Class/Datasets/Diamonds.csv")
diamonds <- read.csv2("Datasets/Diamonds.csv")
diamonds <- read.csv2("Datasets/Diamonds.csv")
str(diamonds)
library(readxl)
install.packages("readxl")
library(readxl)
sales <- read_excel("Datasets/Sales.xlsx")
str(sales)
# Manually assigned headers
colnames(bolly2) <- c("Movie","Collection","Budget","Verdict")
str(bolly1)
str(bolly2)
##############################################
# csv2 is beneficial when delimiter is ';'
diamonds <- read.csv2("Datasets/Diamonds.csv")
str(diamonds)
library(readxl)
sales <- read_excel("Datasets/Sales.xlsx")
str(sales)
str(sales)
write.csv(sales,"sales.csv")
write.csv(sales,"Datasets/sales.csv")
######### Data types ##########
a <- "Maths"
class(a) # Character
x <- c(1,2,3,4,5,6,7,8,9,10)
x[1:5]
x[5:10]
y
y=matrix(x,2,5)
y
y [1,]
y[,2]
y[,2,dropTable=F]
y[,2,drope=F]
y[,2,drop=F]
########## sub-setting a matrix ##########
y=matrix(x,2,5)
y
y[1,]
y[,2]
y[,2,drop=F]
y[,2,drop=F]
########## sub-setting a data-frame ##########
housing <- read.csv("Datasets/Housing.csv")
housing <- read.csv("Datasets/Housing.csv", stringsAsFactors = T)
housing[1,2]
housing[,1:2]
housing[,c(4,6)]
housing[,-c(4,6)]
housing[,c(4,6)]
housing[,-c(4,6)]
housing[c(20,53,440),]
ss_house <- subset(housing, driveway=='yes')
ss_house
ss_house
ss_house <-subset(housing, driveway=='yes')
ss_house
ss_house1 <-subset(housing, driveway=='yes')
ss_house1
ss_house2<-subset(housing, driveway=='yes' & price>45000)
ss_house2
ss_house2<-subset(housing, driveway=='yes' & price>45000).head()
ss_house2
ss_house2<-subset(housing, driveway=='yes' & price>45000).head()
ss_house2<-head(subset(housing, driveway=='yes' & price>45000))
ss_house2
ss_house3<-subset(housing, driveway=='yes' & price>45000,
select=c(price, bedrooms, recroom))
ss_house3
ss_house3<-head(subset(housing, driveway=='yes' & price>45000,
select=c(price, bedrooms, recroom)))
ss_house3
setwd("G:/My Drive/R/Assignments")
orders=read.csv('G:/My Drive/R/Class/Datasets/Orders.csv')
online_orders=orders['online']
online_orders
orders=read.csv('G:/My Drive/R/Class/Datasets/Orders.csv')
online_orders=orders['online']
online_orders=subset(orders,Payment.Terms=='Online')
online_orders
# 2. Consider the dataset mtcars.
# O/P(write) the data in this dataset into a csv file and name the csv file as mtcars.csv.
cars=mtcars
# 2. Consider the data-set mtcars.
# O/P(write) the data in this data-set into a csv file and name the csv file as mtcars.csv.
cars=write(mtcars)
write.csv(mtcars,"G:/My Drive/R/Class/Datasets/mtcars.csv")
write.csv(mtcars,"G:/My Drive/R/Class/Datasets/mtcars.csv")
# 3. Consider the data-set diamonds.
# Subset the data-set with the criteria  as cut=Premium and color=J
diam=read.csv2("G:/My Drive/R/Class/Datasets/Diamonds.csv")
# 1. Subset the data-set Orders to create with only "online" payment
orders=read.csv('G:/My Drive/R/Class/Datasets/Orders.csv')
online_orders=subset(orders,Payment.Terms=='Online')
online_orders
# 2. Consider the data-set mtcars.
# O/P(write) the data in this data-set into a csv file and name the csv file as mtcars.csv.
write.csv(mtcars,"G:/My Drive/R/Class/Datasets/mtcars.csv")
# 3. Consider the data-set diamonds.
# Subset the data-set with the criteria  as cut=Premium and color=J
diam=read.csv2("G:/My Drive/R/Class/Datasets/Diamonds.csv")
# 4. Consider the data-set diamonds.
#Create a data-frame object which stores just variables carat, color, depth and price.
# 5. Consider the dataset mtcars.
# Choose the 2nd,18th, 30th and 12th rows
# 3. Consider the data-set diamonds.
# Subset the data-set with the criteria  as cut=Premium and color=J
diam=read.csv2("G:/My Drive/R/Class/Datasets/Diamonds.csv")
diam_f=subset(diam,cut=='Premium' & color=='J')
diam_f
df_diam=data.frame(carat=diam['carat'],
color=diam['color'],
depth=diam['depth'],
price=diam['price'])
df_diam
head(df_diam)
View(diam)
View(df_diam)
sub_cars=mtcars[,c(2,18,30,12)]
sub_cars=mtcars[c(2,18,30,12),]
sub_cars
